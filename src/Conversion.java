
import java.text.DecimalFormat;

/**
 * HEADER 
 * File Name: Conversion Calculator 
 * Programmer: Jannis Saini 
 * Course Code: ICS4U1-02 
 * Date: March 30, 2022 
 * Description: Converts a users value to the conversion of their choice
 */
public class Conversion extends javax.swing.JFrame {

    // Implementing the 2 decimal format
    DecimalFormat df2 = new DecimalFormat("0.00");

    /**
     * Creates new form Conversion
     */
    public Conversion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        option1Label = new javax.swing.JLabel();
        introLabel = new javax.swing.JLabel();
        option3Label = new javax.swing.JLabel();
        option2Label = new javax.swing.JLabel();
        option4Label = new javax.swing.JLabel();
        option8Label = new javax.swing.JLabel();
        option7Label = new javax.swing.JLabel();
        option6Label = new javax.swing.JLabel();
        option5Label = new javax.swing.JLabel();
        convertionChoiceLabel = new javax.swing.JLabel();
        convertingValueLabel = new javax.swing.JLabel();
        conversionChoiceInput = new javax.swing.JTextField();
        convertingValueInput = new javax.swing.JTextField();
        convertButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        output = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(102, 204, 255));

        titleLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 51, 255));
        titleLabel.setText("Linear Conversion");

        option1Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option1Label.setForeground(new java.awt.Color(0, 0, 255));
        option1Label.setText("1. Inches to Centimeters");

        introLabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        introLabel.setForeground(new java.awt.Color(0, 51, 255));
        introLabel.setText("Hi there! Please look through the list below to find the conversion method you need.");

        option3Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option3Label.setForeground(new java.awt.Color(0, 0, 255));
        option3Label.setText("3. Yards to Meters");

        option2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option2Label.setForeground(new java.awt.Color(0, 0, 255));
        option2Label.setText("2. Feet to Centimeters");

        option4Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option4Label.setForeground(new java.awt.Color(0, 0, 255));
        option4Label.setText("4. Miles to Kilometers");

        option8Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option8Label.setForeground(new java.awt.Color(0, 0, 255));
        option8Label.setText("8. Kilometers to Miles");

        option7Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option7Label.setForeground(new java.awt.Color(0, 0, 255));
        option7Label.setText("7. Meters to Yards");

        option6Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option6Label.setForeground(new java.awt.Color(0, 0, 255));
        option6Label.setText("6. Centimeters to Feet");

        option5Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        option5Label.setForeground(new java.awt.Color(0, 0, 255));
        option5Label.setText("5. Centimeters to Inches");

        convertionChoiceLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        convertionChoiceLabel.setForeground(new java.awt.Color(0, 0, 204));
        convertionChoiceLabel.setText("Enter Conversion Choice (1-8): ");

        convertingValueLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        convertingValueLabel.setForeground(new java.awt.Color(0, 0, 204));
        convertingValueLabel.setText("Enter value to be converted (0.00):");

        convertButton.setBackground(new java.awt.Color(102, 204, 255));
        convertButton.setForeground(new java.awt.Color(0, 102, 255));
        convertButton.setText("Convert");
        convertButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                convertButtonMousePressed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(102, 204, 255));
        exitButton.setForeground(new java.awt.Color(0, 102, 255));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator.png"))); // NOI18N

        output.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        output.setForeground(new java.awt.Color(255, 0, 204));

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option1Label)
                            .addComponent(option3Label)
                            .addComponent(option2Label)
                            .addComponent(option4Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option6Label)
                            .addComponent(option5Label)
                            .addComponent(option7Label)
                            .addComponent(option8Label))
                        .addGap(74, 74, 74))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(convertingValueLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(convertingValueInput, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(convertionChoiceLabel)
                                    .addGap(44, 44, 44)
                                    .addComponent(conversionChoiceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(titleLabel))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(introLabel)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(introLabel)
                .addGap(18, 18, 18)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(option1Label)
                    .addComponent(option5Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(option2Label)
                    .addComponent(option6Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(option3Label)
                    .addComponent(option7Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(option4Label)
                    .addComponent(option8Label))
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(convertionChoiceLabel)
                            .addComponent(conversionChoiceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(convertingValueLabel)
                            .addComponent(convertingValueInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(convertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton)
                    .addComponent(output))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // functunality for exiting the GUI
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param convertingValue 
     * @return Converts Inches to Centimeters and returns the value 
     */
    public double inchesCm(double convertingValue) {
        double convertedCm;
        convertedCm = convertingValue * 2.54;
        return convertedCm;
    }

    /**
     * @param convertingValue 
     * @return Converts Feet to Centimeters and returns the value
     */
    public double feetCm(double convertingValue) {
        double convertedCm;
        convertedCm = convertingValue * 30.48;
        return convertedCm;
    }

    /**
     * @param convertingValue 
     * @return Converts Yards to Meters and returns the value
     */
    public double yardM(double convertingValue) {
        double convertedM;
        convertedM = convertingValue / 1.094;
        return convertedM;
    }

    /**
     * @param convertingValue 
     * @return Converts Miles to Kilometers and returns the value
     */
    public double milesKm(double convertingValue) {
        double convertedKm;
        convertedKm = convertingValue * 1.609;
        return convertedKm;
    }
    
    /**
     * @param convertingValue 
     * @return Converts Centimeters to Meters and returns the value
     */
    public double centimeterInches(double convertingValue) {
        double convertedInch;
        convertedInch = convertingValue / 2.54;
        return convertedInch;
    }
    
    /**
     * @param convertingValue 
     * @return Converts Centimeters to Feet and returns the value
     */
    public double centimeterFeet(double convertingValue) {
        double convertedF;
        convertedF = convertingValue / 30.48;
        return convertedF;
    }
    
    /**
     * @param convertingValue
     * @return Converts Meters to Yards and returns the value
     */
    public double metersYards(double convertingValue) {
        double convertedY;
        convertedY = convertingValue * 1.094;
        return convertedY;
    }
    
    /**
     * @param convertingValue 
     * @return Converts Kilometers to Miles and returns the value
     */
    public double kmMiles(double convertingValue) {
        double convertedMiles;
        convertedMiles = convertingValue / 1.609;
        return convertedMiles;
    }

    private void convertButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_convertButtonMousePressed
        // main method for this program 

        String conversionS, convertingS;//naming the strings
        //getting the text
        conversionS = conversionChoiceInput.getText();
        convertingS = convertingValueInput.getText();

        int conversionChoice; //naming the integer
        //parsing the strings to a integer
        conversionChoice = Integer.parseInt(conversionS);

        double convertingValue; //naming the doubles
        //parsing the string to a double
        convertingValue = Double.parseDouble(convertingS);

        //Goes to the method that corresponds with the users conversion choice then returns the value and prints the output
        switch (conversionChoice) {
            case 1 -> {
                output.setText(df2.format(convertingValue) + " Inches = " + df2.format(inchesCm(convertingValue)) + " Centimeters");
            }
            case 2 -> {
                output.setText(df2.format(convertingValue) + " Feet = " + df2.format(feetCm(convertingValue)) + " Centimeters");
            }
            case 3 -> {
                output.setText(df2.format(convertingValue) + " Yards = " + df2.format(yardM(convertingValue)) + " Meters");
            }
            case 4 -> {
                output.setText(df2.format(convertingValue) + " Miles = " + df2.format(milesKm(convertingValue)) + " Kilometers");
            }
            case 5 -> {
                output.setText(df2.format(convertingValue) + " Centimeters = " + df2.format(centimeterInches(convertingValue)) + " Inches");
            }
            case 6 -> {
                output.setText(df2.format(convertingValue) + " Centimeters = " + df2.format(centimeterFeet(convertingValue)) + " Feets");
            }
            case 7 -> {
                output.setText(df2.format(convertingValue) + " Meters = " + df2.format(metersYards(convertingValue)) + " Yards");
            }
            case 8 -> {
                output.setText(df2.format(convertingValue) + " Kilometers = " + df2.format(kmMiles(convertingValue)) + " Miles");
            }
            default -> {
                //If the user enters an invalid conversion choice they are told to check again 
                output.setText("Sorry that is not an option. Please check again.");
            }
        }
    }//GEN-LAST:event_convertButtonMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JTextField conversionChoiceInput;
    private javax.swing.JButton convertButton;
    private javax.swing.JTextField convertingValueInput;
    private javax.swing.JLabel convertingValueLabel;
    private javax.swing.JLabel convertionChoiceLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel introLabel;
    private javax.swing.JLabel option1Label;
    private javax.swing.JLabel option2Label;
    private javax.swing.JLabel option3Label;
    private javax.swing.JLabel option4Label;
    private javax.swing.JLabel option5Label;
    private javax.swing.JLabel option6Label;
    private javax.swing.JLabel option7Label;
    private javax.swing.JLabel option8Label;
    private javax.swing.JLabel output;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
